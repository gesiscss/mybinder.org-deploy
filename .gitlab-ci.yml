variables:
  GIT_STRATEGY: clone
  GIT_CLEAN_FLAGS: "-ffdx"

stages:
  - lint
  - deploy-acceptance-ansible
  - deploy-acceptance-helm
  - test-acceptance
  - deploy-production-nginx
  - deploy-production-helm

.gesis-manual-web:
  rules:
    - if: $CI_SERVER_HOST == 'git.gesis.org' && $CI_PIPELINE_SOURCE == 'web'
      when: manual
      allow_failure: true

.geis-merge-request:
  rules:
    - if: $CI_SERVER_HOST == 'git.gesis.org' && $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - .gitlab.yml
      when: manual
    - if: $CI_SERVER_HOST == 'git.gesis.org' && $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - ansible/**/*
        - mybinder/**/*
        - config/**/*
        - secrets/**/*

.geis-push-main:
  rules:
    - if: $CI_SERVER_HOST == 'git.gesis.org' && $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == 'main'

include:
  - component: $CI_SERVER_FQDN/rse/docker/images/ansible/ansible-lint@10.2.6
    inputs:
      stage: lint
      dir: ansible

  - component: $CI_SERVER_FQDN/rse/docker/images/ansible/ansible-deploy@10.2.6
    inputs:
      stage: deploy-acceptance-ansible
      dir: ansible
      inventory: gesis-acceptance
      playbook: gesis.yml
      ssh-user: ansible
      ssh-key-type: ed25519
    rules:
      - if: $CI_SERVER_HOST == "git.gesis.org"

.gesis helm deploy:
  image:
    name: docker-private.gesis.intra/gesis/ilcm/orc2/k8s:latest
    entrypoint: [""]
  rules:
      - if: $CI_SERVER_HOST == "git.gesis.org"
  variables:
    HELM_ENVIRONMENT: template
  script:
    - cat $git_crypt_secret_key | base64 -d > git_crypt_secret_key
    - git-crypt unlock git_crypt_secret_key
    - kubectl config use-context ${CI_PROJECT_PATH}:${HELM_ENVIRONMENT}
    - helm version
    - |
      for d in ./mybinder*/; do
        helm dependency update "$d";
      done
    # - |
    #   for chart in mybinder-kube-system mybinder-tigera-operator; do
    #     helm upgrade \
    #     ${chart:9} ./${chart} \
    #     --cleanup-on-fail \
    #     --create-namespace \
    #     --history-max 3 \
    #     --install \
    #     --namespace=${chart};
    #   done
    - |
      helm lint ./mybinder \
      --values ./config/gesis-${HELM_ENVIRONMENT}.yaml \
      --values ./secrets/config/common/common.yaml \
      --values ./secrets/config/common/cryptnono.yaml \
      --values ./secrets/config/common/gesis.yaml \
      --values ./secrets/config/gesis-${HELM_ENVIRONMENT}.yaml
    - |
      helm upgrade \
      binderhub ./mybinder \
      --cleanup-on-fail \
      --create-namespace \
      --history-max 3 \
      --install \
      --namespace=gesis \
      --render-subchart-notes \
      --values ./config/gesis-${HELM_ENVIRONMENT}.yaml \
      --values ./secrets/config/common/common.yaml \
      --values ./secrets/config/common/cryptnono.yaml \
      --values ./secrets/config/common/gesis.yaml \
      --values ./secrets/config/gesis-${HELM_ENVIRONMENT}.yaml

gesis helm acceptance deploy:
  resource_group: acceptance
  stage: deploy-acceptance-helm
  rules:
    - !reference [.gesis-manual-web, rules]
    - !reference [.geis-merge-request, rules]
    - !reference [.geis-push-main, rules]
  variables:
    HELM_ENVIRONMENT: acceptance
  extends:
    - .gesis helm deploy

gesis helm production deploy:
  resource_group: production
  stage: deploy-production-helm
  rules:
    - !reference [.gesis-manual-web, rules]
    - !reference [.geis-push-main, rules]
  variables:
    HELM_ENVIRONMENT: stage
  extends:
    - .gesis helm deploy

smoke test to acceptance cluster:
  stage: test-acceptance
  rules:
    - !reference [.gesis-manual-web, rules]
    - !reference [.geis-merge-request, rules]
    - !reference [.geis-push-main, rules]
  script:
    - curl https://notebooks-test.gesis.org/binder/
