variables:
  GIT_STRATEGY: clone
  GIT_CLEAN_FLAGS: "-ffdx"

stages:
  - build
  - deploy-stage-ansible
  - deploy-stage-helm
  - test-stage
  - deploy-prod-nginx
  - deploy-prod-helm

include:
  - component: $CI_SERVER_FQDN/rse/docker/images/ansible/ansible-lint@10.2.6
    inputs:
      stage: build
      dir: ansible

  - component: $CI_SERVER_FQDN/rse/docker/images/ansible/ansible-deploy@10.2.6
    inputs:
      stage: deploy-stage-ansible
      dir: ansible
      inventory: gesis-stage
      playbook: gesis.yml
      ssh-user: ansible
      ssh-key-type: ed25519

Create Helm release number:
  stage: build
  image: alpine:3.20.3
  variables:
    APK_CACHE_DIR: "$CI_PROJECT_DIR/.cache/apk"
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/
  script:
    - apk add git python3 pipx
    - pipx install chartpress
    - pipx run chartpress
    - cp -r mybinder dist
  artifacts:
    paths:
      - dist/
    expire_in: 1h

.gesis helm deploy:
  image: 
    name: docker-private.gesis.intra/gesis/ilcm/orc2/k8s:latest
    entrypoint: [""]
  variables:
    HELM_ENVIRONMENT: template
  script:
    - cat $git_crypt_secret_key | base64 -d > git_crypt_secret_key
    - git-crypt unlock git_crypt_secret_key
    - kubectl config use-context ${CI_PROJECT_PATH}:${HELM_ENVIRONMENT}
    - helm version
    - |
      for d in ./dist*/; do
        helm dependency update "$d";
      done
    # - |
    #   for chart in mybinder-kube-system mybinder-tigera-operator; do
    #     helm upgrade \
    #     ${chart:9} ./${chart} \
    #     --cleanup-on-fail \
    #     --create-namespace \
    #     --history-max 3 \
    #     --install \
    #     --namespace=${chart};
    #   done
    - |
      helm lint ./dist \
      --values ./config/gesis-${HELM_ENVIRONMENT}.yaml \
      --values ./secrets/config/common/common.yaml \
      --values ./secrets/config/common/cryptnono.yaml \
      --values ./secrets/config/gesis-${HELM_ENVIRONMENT}.yaml
    - |
      helm upgrade \
      binderhub ./dist \
      --cleanup-on-fail \
      --create-namespace \
      --history-max 3 \
      --install \
      --namespace=gesis \
      --render-subchart-notes \
      --values ./config/gesis-${HELM_ENVIRONMENT}.yaml \
      --values ./secrets/config/common/common.yaml \
      --values ./secrets/config/common/cryptnono.yaml \
      --values ./secrets/config/gesis-${HELM_ENVIRONMENT}.yaml

gesis helm stage deploy:
  resource_group: stage
  stage: deploy-stage-helm
  variables:
    HELM_ENVIRONMENT: stage
  extends:
    - .gesis helm deploy

smoke test to stage cluster:
  stage: test-stage
  script:
    - curl https://notebooks-test.gesis.org/binder/